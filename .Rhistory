n_trips = sum(n_trips),
n_vessels = sum(n_vessels),
obs_disc_mt = sum(observed_discard_mt),
obs_ret_mt = sum(observed_retained_mt),
dis_rate = mean(discard_rate)
)
chk1 <- catchshare |>
dplyr::select(year, fleet, catch_shares, obs_disc_mt)
# data.frame(year = catchshare$year, discard.sum = catchshare$obs_disc_mt)
chk2 <- disrate_comb |>
dplyr::select(year, fleet, catch_shares, observed_discard_mt)
# data.frame(year = disrate_catchsh$year, discard.cs = disrate_catchsh$observed_discard_mt)
comb_chk <- dplyr::left_join(chk1, chk2, by = c("year", "fleet", "catch_shares")) |>
dplyr::mutate(diff = obs_disc_mt - observed_discard_mt) # |>
# dplyr::filter(diff > 0)
#| echo: false
#| eval: false
disrate_comb
#| eval: true
#| echo: false
all_noncatch <- disrate_noncatch |>
dplyr::group_by(year) |>
dplyr::summarise(total_discards = sum(obs_discard))
non_catchshare_prop <- disrate_noncatch |>
dplyr::left_join(all_noncatch, by = "year") |>
# combine OR and WA fleets like the assessment and GEMM groupings
# dplyr::mutate(fleet = dplyr::case_when(
#                 fleet == "fixed-OR" | fleet == "fixed-WA" ~ "fixed-ORWA",
#                 fleet == "trawl-OR" | fleet == "trawl-WA" ~ "trawl-ORWA",
#                 TRUE ~ fleet
#               )) |>
dplyr::group_by(year, fleet) |>
dplyr::summarise(
total_discards = sum(total_discards),
obs_discard = sum(obs_discard)
) |>
dplyr::mutate(prop_disc = obs_discard / total_discards) |>
dplyr::select(year, fleet, prop_disc) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
))
non_catchshare <- non_catchshare_prop |>
dplyr::left_join(commercial_gemm, by = c("year")) |> # ,"fleet"
dplyr::mutate(nonshare_discard = total_discards * prop_disc) |>
dplyr::select(year, fleet, nonshare_discard)
# check for reported discards from the non-catch share that dont have calc'd discards at the end
# check only valid if lines 239-241 are run for non_catchshare
# chk <- non_catchshare |>
#   dplyr::filter(total_discards > 0 & is.na(nonshare_discard))
View(all_noncatch)
View(disrate_comb)
View(non_catchshare)
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::left_join(non_catchshare, by = c("year", "fleet"))
View(all_comm_discards)
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::left_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(total_discards = observed_discard_mt + nonshare_discard)
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::left_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(nonshare_discard = dplyr::case_when(is.na(nonshare_discard) ~ 0,
TRUE ~ nonshare_discard),
total_discards = observed_discard_mt + nonshare_discard)
?tidyr::pivot_wider
# check years for non-share data
tidyr::pivot_wider(non_catchshare,
id_cols = year,
names_from = fleet,
values_from = nonshare_discard
)
# check years for non-share data
tidyr::pivot_wider(non_catchshare,
id_cols = year,
names_from = fleet,
values_from = nonshare_discard
) |>
flextable::flextable()
View(commercial_gemm)
View(comb_chk)
View(all_noncatch)
View(non_catchshare_prop)
View(non_catchshare)
non_catchshare_prop <- disrate_noncatch |>
dplyr::left_join(all_noncatch, by = "year") |>
# combine OR and WA fleets like the assessment and GEMM groupings
# dplyr::mutate(fleet = dplyr::case_when(
#                 fleet == "fixed-OR" | fleet == "fixed-WA" ~ "fixed-ORWA",
#                 fleet == "trawl-OR" | fleet == "trawl-WA" ~ "trawl-ORWA",
#                 TRUE ~ fleet
#               )) |>
dplyr::group_by(year, fleet) |>
dplyr::summarise(
total_discards = sum(total_discards),
obs_discard = sum(obs_discard)
) |>
dplyr::mutate(prop_disc = obs_discard / total_discards)
non_catchshare_prop <- disrate_noncatch |>
dplyr::left_join(all_noncatch, by = "year") |>
# combine OR and WA fleets like the assessment and GEMM groupings
# dplyr::mutate(fleet = dplyr::case_when(
#                 fleet == "fixed-OR" | fleet == "fixed-WA" ~ "fixed-ORWA",
#                 fleet == "trawl-OR" | fleet == "trawl-WA" ~ "trawl-ORWA",
#                 TRUE ~ fleet
#               )) |>
dplyr::group_by(year, fleet) |>
dplyr::summarise(
total_discards = sum(total_discards),
obs_discard = sum(obs_discard)
) |>
dplyr::mutate(prop_disc = obs_discard / total_discards) |>
dplyr::select(year, fleet, prop_disc) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
))
non_catchshare <- non_catchshare_prop |>
dplyr::left_join(commercial_gemm, by = c("year")) |> # ,"fleet"
dplyr::mutate(nonshare_discard = total_discards * prop_disc)
View(non_catchshare)
library(readr)
gemm_catch_by_cs_gear <- read_csv("Data/discards/gemm_catch_by_cs_gear.csv")
View(gemm_catch_by_cs_gear)
View(commercial_gemm)
gemm_comm_alt <- gemm_catch_by_cs_gear dplyr::group_by(year) |>
gemm_comm_alt <- gemm_catch_by_cs_gear dplyr::group_by(year) |>
gemm_comm_alt <- gemm_catch_by_cs_gear |>
dplyr::group_by(year) |>
dplyr::summarise(gemm_alt_dsic = sum(discard_mt))
View(gemm_comm_alt)
gemm_comm_alt <- gemm_catch_by_cs_gear |>
dplyr::group_by(year) |>
dplyr::summarise(gemm_alt_dsic = sum(discard_mt)) |>
dplyr::left_join(commercial_gemm, by = "year") |>
dplyr::mutate(diff = total_discards - gemm_alt_dsic)
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::left_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(nonshare_discard = dplyr::case_when(is.na(nonshare_discard) ~ 0,
TRUE ~ nonshare_discard),
total_discards = observed_discard_mt + nonshare_discard)
View(all_comm_discards)
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::left_join(non_catchshare, by = c("year", "fleet"))
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::left_join(non_catchshare, by = c("year", "fleet"))
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
))
#| eval: true
#| echo: false
all_noncatch <- disrate_noncatch |>
dplyr::group_by(year) |>
dplyr::summarise(total_discards = sum(obs_discard))
non_catchshare_prop <- disrate_noncatch |>
dplyr::left_join(all_noncatch, by = "year") |>
# combine OR and WA fleets like the assessment and GEMM groupings
# dplyr::mutate(fleet = dplyr::case_when(
#                 fleet == "fixed-OR" | fleet == "fixed-WA" ~ "fixed-ORWA",
#                 fleet == "trawl-OR" | fleet == "trawl-WA" ~ "trawl-ORWA",
#                 TRUE ~ fleet
#               )) |>
dplyr::group_by(year, fleet) |>
dplyr::summarise(
total_discards = sum(total_discards),
obs_discard = sum(obs_discard)
) |>
dplyr::mutate(prop_disc = obs_discard / total_discards) |>
dplyr::select(year, fleet, prop_disc) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
))
non_catchshare <- non_catchshare_prop |>
dplyr::left_join(commercial_gemm, by = c("year")) |> # ,"fleet"
dplyr::mutate(nonshare_discard = total_discards * prop_disc) |>
dplyr::select(year, fleet, nonshare_discard)
# check for reported discards from the non-catch share that dont have calc'd discards at the end
# check only valid if lines 239-241 are run for non_catchshare
# chk <- non_catchshare |>
#   dplyr::filter(total_discards > 0 & is.na(nonshare_discard))
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::left_join(non_catchshare, by = c("year", "fleet"))
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::left_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(nonshare_discard = dplyr::case_when(is.na(nonshare_discard) ~ 0,
TRUE ~ nonshare_discard),
total_discards = observed_discard_mt + nonshare_discard)
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::left_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(nonshare_discard = dplyr::case_when(is.na(nonshare_discard) ~ 0,
TRUE ~ nonshare_discard),
total_discards = round(observed_discard_mt + nonshare_discard, 2))
View(disrate_comb)
View(all_noncatch)
View(non_catchshare)
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::right_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(nonshare_discard = dplyr::case_when(is.na(nonshare_discard) ~ 0,
TRUE ~ nonshare_discard),
total_discards = round(observed_discard_mt + nonshare_discard, 2))
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::right_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(nonshare_discard = dplyr::case_when(is.na(nonshare_discard) ~ 0,
TRUE ~ nonshare_discard),
observed_discard_mt = dplyr::case_when(is.na(observed_discard_mt) ~ 0,
TRUE ~ observed_discard_mt),
total_discards = round(observed_discard_mt + nonshare_discard, 2))
View(gemm_catch_by_cs_gear)
View(disrate_noncatch)
View(disrate_catchsh)
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::right_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(nonshare_discard = dplyr::case_when(is.na(nonshare_discard) ~ 0,
TRUE ~ nonshare_discard),
observed_discard_mt = dplyr::case_when(is.na(observed_discard_mt) ~ 0,
TRUE ~ observed_discard_mt),
total_discards = round(observed_discard_mt + nonshare_discard, 2)) |>
dplyr::select(year, fleet, total_discards)
?write.csv
write.csv(all_comm_discards, file = "~/GitHub/Sebastes_ruberrimus_2025/Data/processed/discards/commercial_discards.csv")
gemm <- nwfscSurvey::pull_gemm(common_name = "yelloweye rockfish") |>
suppressWarnings()
CA_rec_fleets <- c(
"California Recreational"
)
OR_rec_fleets <- c(
"Oregon Recreational"
)
WA_rec_fleets <- c(
"Washington Recreational"
)
CA_comm_twl <- c(
"CS - Bottom Trawl",
"CS EM - Bottom Trawl",
"Pink Shrimp",
"CS - Bottom and Midwater Trawl",
"Limited Entry Trawl"
)
CA_comm_nontwl <- c(
"CS EM - Pot",
"Triabl Shoreside",
"CS - Pot",
"LE Fixed Gear DTL - Hook & Line",
"CS - Hook & Line",
"LE CA Halibut"
)
ORWA_comm_twl <- c(
"At-Sea Hake CP",
"At-Sea Hake MSCV",
"Midwater Hake",
"Midwater Rockfish",
"Directed P Halibut",
"Midwater Rockfish EM",
"Midwater Hake EM",
"Tribal At-Sea Hake"
)
ORWA_comm_nontwl <- c(
"Incidental",
"LE Sablefish - Hook & Line",
"LE Sablefish - Pot",
"Nearshore",
"OA Fixed Gear - Hook & Line",
"OA Fixed Gear - Pot",
"Shoreside Hake"
)
# extra
addl_fleets <- c(
"Research"
)
recreational <- gemm |>
dplyr::filter(sector %in% c(CA_rec_fleets, OR_rec_fleets, WA_rec_fleets))
commercial_gemm <- gemm |>
# dplyr::filter(sector %in% c(CA_comm_twl, CA_comm_nontwl, ORWA_comm_twl, ORWA_comm_nontwl)) |>
# dplyr::mutate(
#   area = dplyr::case_when(
#     sector %in% c(CA_comm_twl, CA_comm_nontwl) ~ "CA",
#     sector %in% c(ORWA_comm_twl, ORWA_comm_nontwl) ~ "ORWA",
#     TRUE ~ "XXXX"
#     ),
#   type = dplyr::case_when(
#     sector %in% c(CA_comm_twl, ORWA_comm_twl) ~ "TWL",
#     sector %in% c(CA_comm_nontwl, ORWA_comm_nontwl) ~ "NONTWL",
#     TRUE ~ "XXXX"
#   ),
#   fleet = glue::glue("{type}-{area}")
# ) |>
dplyr::group_by(year) |> #, fleet - no longer summarizing by fleet bc we don't know which ones are for which fleet/state
dplyr::summarise(total_discards = sum(total_discard_mt),
cv = max(cv))
# alternatvie gemm from Kiva
#| eval: false
gemm_comm_alt <- gemm_catch_by_cs_gear |>
dplyr::group_by(year) |>
dplyr::summarise(gemm_alt_dsic = sum(discard_mt)) |>
dplyr::left_join(commercial_gemm, by = "year") |>
dplyr::mutate(diff = total_discards - gemm_alt_dsic)
disdir <- "~/GitHub/Sebastes_ruberrimus_2025/Data/discards"
disrate_comb <- utils::read.csv(file.path(disdir, "discard_rates_combined_catch_share.csv"))
disrate_noncatch <- utils::read.csv(file.path(disdir, "discard_rates_noncatch_share.csv"))
disrate_emcatch <- utils::read.csv(file.path(disdir, "discards_rates_em_catch_share.csv"))
disrate_catchsh <- utils::read.csv(file.path(disdir, "discards_rates_catch_share.csv"))
#| eval: false
#| echo: false
catchshare <- rbind(disrate_catchsh, disrate_emcatch) |>
dplyr::filter(catch_shares == TRUE) |>
# rbind(disrate_comb) |>
dplyr::group_by(year, fleet, catch_shares) |>
dplyr::summarise(
n_obs = sum(n_obs),
n_hauls = sum(n_hauls),
n_trips = sum(n_trips),
n_vessels = sum(n_vessels),
obs_disc_mt = sum(observed_discard_mt),
obs_ret_mt = sum(observed_retained_mt),
dis_rate = mean(discard_rate)
)
chk1 <- catchshare |>
dplyr::select(year, fleet, catch_shares, obs_disc_mt)
# data.frame(year = catchshare$year, discard.sum = catchshare$obs_disc_mt)
chk2 <- disrate_comb |>
dplyr::select(year, fleet, catch_shares, observed_discard_mt)
# data.frame(year = disrate_catchsh$year, discard.cs = disrate_catchsh$observed_discard_mt)
comb_chk <- dplyr::left_join(chk1, chk2, by = c("year", "fleet", "catch_shares")) |>
dplyr::mutate(diff = obs_disc_mt - observed_discard_mt) # |>
# dplyr::filter(diff > 0)
#| echo: false
#| eval: false
disrate_comb
#| eval: true
#| echo: false
all_noncatch <- disrate_noncatch |>
dplyr::group_by(year) |>
dplyr::summarise(total_discards = sum(obs_discard))
non_catchshare_prop <- disrate_noncatch |>
dplyr::left_join(all_noncatch, by = "year") |>
# combine OR and WA fleets like the assessment and GEMM groupings
# dplyr::mutate(fleet = dplyr::case_when(
#                 fleet == "fixed-OR" | fleet == "fixed-WA" ~ "fixed-ORWA",
#                 fleet == "trawl-OR" | fleet == "trawl-WA" ~ "trawl-ORWA",
#                 TRUE ~ fleet
#               )) |>
dplyr::group_by(year, fleet) |>
dplyr::summarise(
total_discards = sum(total_discards),
obs_discard = sum(obs_discard)
) |>
dplyr::mutate(prop_disc = obs_discard / total_discards) |>
dplyr::select(year, fleet, prop_disc) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
))
non_catchshare <- non_catchshare_prop |>
dplyr::left_join(commercial_gemm, by = c("year")) |> # ,"fleet"
dplyr::mutate(nonshare_discard = total_discards * prop_disc) |>
dplyr::select(year, fleet, nonshare_discard)
# check for reported discards from the non-catch share that dont have calc'd discards at the end
# check only valid if lines 239-241 are run for non_catchshare
# chk <- non_catchshare |>
#   dplyr::filter(total_discards > 0 & is.na(nonshare_discard))
# check years for non-share data
tidyr::pivot_wider(non_catchshare,
id_cols = year,
names_from = fleet,
values_from = nonshare_discard
) |>
flextable::flextable()
#| echo: false
#| eval: true
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::right_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(nonshare_discard = dplyr::case_when(is.na(nonshare_discard) ~ 0,
TRUE ~ nonshare_discard),
observed_discard_mt = dplyr::case_when(is.na(observed_discard_mt) ~ 0,
TRUE ~ observed_discard_mt),
total_discards = round(observed_discard_mt + nonshare_discard, 2)) |>
dplyr::select(year, fleet, total_discards)
# write.csv(all_comm_discards, file = "~/GitHub/Sebastes_ruberrimus_2025/Data/processed/discards/commercial_discards.csv")
View(all_comm_discards)
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::right_join(non_catchshare, by = c("year", "fleet")) |>
dplyr::mutate(nonshare_discard = dplyr::case_when(is.na(nonshare_discard) ~ 0,
TRUE ~ nonshare_discard),
observed_discard_mt = dplyr::case_when(is.na(observed_discard_mt) ~ 0,
TRUE ~ observed_discard_mt),
total_discards = round(observed_discard_mt + nonshare_discard, 2))
all_comm_discards <- disrate_comb |>
dplyr::select(year, fleet, observed_discard_mt) |>
dplyr::mutate(fleet = dplyr::case_when(
grepl("fixed", fleet) ~ stringr::str_replace(fleet, "fixed", "NONTWL"),
grepl("trawl", fleet) ~ stringr::str_replace(fleet, "trawl", "TWL"),
TRUE ~ fleet
)) |>
dplyr::right_join(non_catchshare, by = c("year", "fleet"))
setwd("~/GitHub/Sebastes_ruberrimus_2025")
dir.create(file.path(getwd(), "Data", "raw","discards"))
dir.create(file.path(getwd(), "Data", "raw","discards"))
library(readr)
discard_rates_noncatch_share <- read_csv("Data/raw/nonconfidential/discards/discard_rates_noncatch_share.csv")
View(discard_rates_noncatch_share)
gemm <- nwfscSurvey::pull_gemm(common_name = "yelloweye rockfish") |>
suppressWarnings()
commercial_gemm <- gemm |>
# dplyr::filter(sector %in% c(CA_comm_twl, CA_comm_nontwl, ORWA_comm_twl, ORWA_comm_nontwl)) |>
# dplyr::mutate(
#   area = dplyr::case_when(
#     sector %in% c(CA_comm_twl, CA_comm_nontwl) ~ "CA",
#     sector %in% c(ORWA_comm_twl, ORWA_comm_nontwl) ~ "ORWA",
#     TRUE ~ "XXXX"
#     ),
#   type = dplyr::case_when(
#     sector %in% c(CA_comm_twl, ORWA_comm_twl) ~ "TWL",
#     sector %in% c(CA_comm_nontwl, ORWA_comm_nontwl) ~ "NONTWL",
#     TRUE ~ "XXXX"
#   ),
#   fleet = glue::glue("{type}-{area}")
# ) |>
dplyr::group_by(year) |> #, fleet - no longer summarizing by fleet bc we don't know which ones are for which fleet/state
dplyr::summarise(total_discards = sum(total_discard_mt),
cv = max(cv))
