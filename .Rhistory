NWFSC_ages <- rbind(NWFSC_caal, NWFSC_maal)
# IPHC survey CAAL and MAAL - fleet -12 and 12
# Data provided by Fabio, bio comps processed by Elizabeth
IPHC_caal_old <- inputs$dat$agecom |>
filter(fleet == 12) |>
filter(year <= 2016)
IPHC_caal_new <- read.csv(file.path(
getwd(),
"Data",
"processed",
"IPHC_bio_data",
"iphc_caal.csv"
)) |>
filter(year > 2016)
colnames(IPHC_caal_new) <- colnames_a
IPHC_caal <- rbind(IPHC_caal_old, IPHC_caal_new)
IPHC_maal_old <- inputs$dat$agecom |>
filter(fleet == -12) |>
filter(year <= 2016)
IPHC_maal_new <- read.csv(file.path(
getwd(),
"Data",
"processed",
"IPHC_bio_data",
"iphc_marginal_ages.csv"
)) |>
filter(year > 2016)
colnames(IPHC_maal_new) <- colnames_a
IPHC_maal <- rbind(IPHC_maal_old, IPHC_maal_new)
IPHC_ages <- rbind(IPHC_caal, IPHC_maal)
# Combine all ages together
all_ages <- do.call(
"rbind",
list(
CA_TWL_ages,
CA_NONTWL_ages,
CA_NONTWL_ages_wcgop,
CA_REC_wdfw,
CA_REC_don_pearson,
CA_REC_ages,
ORWA_TWL_ages,
ORWA_NONTWL_ages,
OR_REC_ages,
WA_REC_ages,
NWFSC_ages,
IPHC_ages
)
)
inputs$dat$agecomp <- all_ages
r4ss::SS_write(inputs, dir = here::here("model/2025_update_all_data"), overwrite = TRUE)
# Get inputs from 2017 assessment that will get carried over to this assessment
# You can also change this to another model
model_2025_path <- file.path(getwd(), "model", "2025_update_all_data")
ctl <- r4ss::SS_readctl(file = file.path(model_2025_path, "yelloweye_control.ss"))
inputs <- r4ss::SS_read(file = file.path(model_2025_path, "yelloweye_control.ss"))
inputs <- r4ss::SS_read(file = model_2025_path)
inputs <- r4ss::SS_read(model_2025_path)
ctl <- inputs$ctl
library(dplyr)
library(tidyr)
library(r4ss)
# Get inputs from 2017 assessment that will get carried over to this assessment
# You can also change this to another model
model_2025_path <- file.path(getwd(), "model", "2025_update_all_data")
inputs <- r4ss::SS_read(model_2025_path)
ctl <- inputs$ctl
ctl$Block_Design[[2]][2] <- 2024
ctl$Block_Design[[3]][2] <- 2024
ctl$Block_Design[[4]][2] <- 2024
ctl$MG_parms["Wtlen_1_Fem_GP_1",]$INIT <- 7.183309e-06
ctl$MG_parms["Wtlen_1_Fem_GP_1",]$PRIOR <- 7.183309e-06
ctl$MG_parms["Wtlen_2_Fem_GP_1",]$INIT <- 3.244801
ctl$MG_parms["Wtlen_2_Fem_GP_1",]$PRIOR <-3.244801
# Change last year of main rec_dev, for the last assessment this was 2015 so I
# would assume this would be 2023 for this year?
ctl$MainRdevYrLast <- 2023
# Fill outfile with directory and file name of the file written
r4ss::SS_writectl(ctl, outfile = file.path(model_2025_path, "yelloweye_control.ss"), overwrite = TRUE)
r4ss::get_ss3_exe(dir = model_2025_path)
devtools::install_github('r4ss/r4ss')
unloadNamespace("r4ss")
devtools::install_github('r4ss/r4ss')
.libPaths()
unloadNamespace("xfun")
unloadNamespace("knitr")
unloadNamespace("kableExtra")
unloadNamespace("xfun")
unloadNamespace("knitr")
unloadNamespace("rmarkdown")
unloadNamespace("knitr")
unloadNamespace("xfun")
devtools::unload("xfun")
test <- inputs$dat$catch
testing <- inputs$dat$catch %>%
filter(fleet == 1, year == 2024)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
#remotes::install_github("r4ss/r4ss")
library(r4ss)
library(readr)
library(nwfscSurvey)
library(here)
#remotes::install_github("pfmc-assessments/pacfintools")
library(pacfintools)
exe_loc <- here::here('model/ss3.exe')
updated_startfile_dir <- here::here("model", "updated_alldata_tunecomps_fitbias_ctl_tunecomps_start_20250512")
base_comm_discards_updated_dir <- here::here("model", "base_comm_discards_updated")
copy_SS_inputs(
dir.old = updated_startfile_dir,
dir.new = base_comm_discards_updated_dir,
create.dir = TRUE,
overwrite = TRUE,
use_ss_new = TRUE,
verbose = TRUE
)
#all catch
inputs <- SS_read(dir = file.path(getwd(), "model", "base_comm_discards_updated"))
catch <- inputs$dat$catch
View(catch)
testing <- inputs$dat$catch %>%
filter(fleet == 2, year == 2024)
View(testing)
discards_1 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "CA_TWL"]
# read in commercial discards
discards <- read.csv(file.path(getwd(),"Data","processed","discards","commercial_discards.csv")) |>
# remove column of row names from previous save
dplyr::select(-X)
# Combine OR and WA discards for fleet
discards_ORWA <- discards |>
dplyr::filter(grepl("OR|WA", fleet)) |>
tidyr::separate_wider_delim(fleet, delim = "-", names = c("fleet", "state")) |>
dplyr::group_by(year, fleet) |>
dplyr::summarise(discards = sum(total_discards)) |>
dplyr::ungroup() |>
dplyr::mutate(state = "ORWA")
# Combine CA and ORWA discards into final discards df
discards_all <- discards |>
dplyr::filter(grepl("CA", fleet)) |>
tidyr::separate_wider_delim(fleet, delim = "-", names = c("fleet", "state")) |>
dplyr::rename(discards = total_discards) |>
rbind(discards_ORWA) |>
dplyr::mutate(ST_FLEET = glue::glue("{state}_{fleet}")) |>
dplyr::select(-c(fleet, state)) |>
dplyr::filter(year > 2015)
discards_all_ave_2021to2023 <- discards_all %>%
filter(year %in% c(2021, 2022, 2023)) %>%
group_by(ST_FLEET) %>%
summarise(avg_discards = mean(discards, na.rm = TRUE, .groups = "drop"))
discards_1 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "CA_TWL"]
discards_1
discards_2 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "CA_NONTWL"]
discards_3 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "ORWA_TWL"]
discards_4 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "ORWA_NONTWL"]
discards_2
discards_3
discards_4
updated_startfile_dir <- here::here("model", "updated_alldata_tunecomps_fitbias_ctl_tunecomps_start_20250512")
base_comm_discards_updated_dir <- here::here("model", "base_comm_discards_updated")
copy_SS_inputs(
dir.old = updated_startfile_dir,
dir.new = base_comm_discards_updated_dir,
create.dir = TRUE,
overwrite = TRUE,
use_ss_new = TRUE,
verbose = TRUE
)
#all catch
inputs <- SS_read(dir = file.path(getwd(), "model", "base_comm_discards_updated"))
catch <- inputs$dat$catch
# read in commercial discards
discards <- read.csv(file.path(getwd(),"Data","processed","discards","commercial_discards.csv")) |>
# remove column of row names from previous save
dplyr::select(-X)
# Combine OR and WA discards for fleet
discards_ORWA <- discards |>
dplyr::filter(grepl("OR|WA", fleet)) |>
tidyr::separate_wider_delim(fleet, delim = "-", names = c("fleet", "state")) |>
dplyr::group_by(year, fleet) |>
dplyr::summarise(discards = sum(total_discards)) |>
dplyr::ungroup() |>
dplyr::mutate(state = "ORWA")
# Combine CA and ORWA discards into final discards df
discards_all <- discards |>
dplyr::filter(grepl("CA", fleet)) |>
tidyr::separate_wider_delim(fleet, delim = "-", names = c("fleet", "state")) |>
dplyr::rename(discards = total_discards) |>
rbind(discards_ORWA) |>
dplyr::mutate(ST_FLEET = glue::glue("{state}_{fleet}")) |>
dplyr::select(-c(fleet, state)) |>
dplyr::filter(year > 2015)
discards_all_ave_2021to2023 <- discards_all %>%
filter(year %in% c(2021, 2022, 2023)) %>%
group_by(ST_FLEET) %>%
summarise(avg_discards = mean(discards, na.rm = TRUE, .groups = "drop"))
discards_1 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "CA_TWL"]
discards_2 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "CA_NONTWL"]
discards_4 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "ORWA_TWL"]
discards_5 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "ORWA_NONTWL"]
inputs$dat$catch <- inputs$dat$catch %>%
mutate(catch = if_else(fleet == 1 & year == 2024, catch + discards_1, catch)) %>%
mutate(catch = if_else(fleet == 2 & year == 2024, catch + discards_2, catch)) %>%
mutate(catch = if_else(fleet == 4 & year == 2024, catch + discards_4, catch)) %>%
mutate(catch = if_else(fleet == 5 & year == 2024, catch + discards_5, catch))
test <- inputs$dat$catch
View(test)
updated_startfile_dir <- here::here("model", "updated_alldata_tunecomps_fitbias_ctl_tunecomps_start_20250512")
base_comm_discards_updated_dir <- here::here("model", "base_comm_discards_updated")
copy_SS_inputs(
dir.old = updated_startfile_dir,
dir.new = base_comm_discards_updated_dir,
create.dir = TRUE,
overwrite = TRUE,
use_ss_new = TRUE,
verbose = TRUE
)
#all catch
inputs <- SS_read(dir = file.path(getwd(), "model", "base_comm_discards_updated"))
# read in commercial discards
discards <- read.csv(file.path(getwd(),"Data","processed","discards","commercial_discards.csv")) |>
# remove column of row names from previous save
dplyr::select(-X)
# Combine OR and WA discards for fleet
discards_ORWA <- discards |>
dplyr::filter(grepl("OR|WA", fleet)) |>
tidyr::separate_wider_delim(fleet, delim = "-", names = c("fleet", "state")) |>
dplyr::group_by(year, fleet) |>
dplyr::summarise(discards = sum(total_discards)) |>
dplyr::ungroup() |>
dplyr::mutate(state = "ORWA")
# Combine CA and ORWA discards into final discards df
discards_all <- discards |>
dplyr::filter(grepl("CA", fleet)) |>
tidyr::separate_wider_delim(fleet, delim = "-", names = c("fleet", "state")) |>
dplyr::rename(discards = total_discards) |>
rbind(discards_ORWA) |>
dplyr::mutate(ST_FLEET = glue::glue("{state}_{fleet}")) |>
dplyr::select(-c(fleet, state)) |>
dplyr::filter(year > 2015)
discards_all_ave_2021to2023 <- discards_all %>%
filter(year %in% c(2021, 2022, 2023)) %>%
group_by(ST_FLEET) %>%
summarise(avg_discards = mean(discards, na.rm = TRUE, .groups = "drop"))
discards_1 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "CA_TWL"]
discards_2 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "CA_NONTWL"]
discards_4 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "ORWA_TWL"]
discards_5 <- discards_all_ave_2021to2023$avg_discards[discards_all_ave_2021to2023$ST_FLEET == "ORWA_NONTWL"]
inputs$dat$catch <- inputs$dat$catch %>%
mutate(catch = if_else(fleet == 1 & year == 2024, catch + discards_1, catch)) %>%
mutate(catch = if_else(fleet == 2 & year == 2024, catch + discards_2, catch)) %>%
mutate(catch = if_else(fleet == 4 & year == 2024, catch + discards_4, catch)) %>%
mutate(catch = if_else(fleet == 5 & year == 2024, catch + discards_5, catch))
SS_write(inputs, dir = file.path(getwd(), "model", "base_comm_discards_updated"), overwrite = TRUE)
get_ss3_exe(dir = file.path(getwd(), "model", "base_comm_discards_updated"))
run(dir = file.path(getwd(), "model", "base_comm_discards_updated"), show_in_console = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
#remotes::install_github("r4ss/r4ss")
library(r4ss)
library(readr)
library(nwfscSurvey)
library(here)
#remotes::install_github("pfmc-assessments/pacfintools")
library(pacfintools)
exe_loc <- here::here('model/ss3.exe')
base_comm_discards_updated_dir <- here::here("model", "base_comm_discards_updated")
base_comm_discards_steepness_updated_dir <- here::here("model", "base_comm_discards_steepness_updated")
copy_SS_inputs(
dir.old = base_comm_discards_updated_dir,
dir.new = base_comm_discards_steepness_updated_dir,
create.dir = TRUE,
overwrite = TRUE,
use_ss_new = TRUE,
verbose = TRUE
)
inputs <- SS_read(dir = base_comm_discards_steepness_updated_dir)
inputs$ctl$SR_parms$INIT[2] <- 0.72
inputs$ctl$SR_parms$PRIOR[2] <- 0.72
ctl <- inputs$ctl
# Fill outfile with directory and file name of the file written
r4ss::SS_writectl(
ctl,
outfile = file.path(base_comm_discards_steepness_updated_dir, "yelloweye_control.ss"),
overwrite = TRUE
)
r4ss::get_ss3_exe(dir = base_comm_discards_steepness_updated_dir)
# You have to run this model in full (not using -nohess) because you need the covar file
# to fit the bias
r4ss::run(dir = base_comm_discards_steepness_updated_dir, show_in_console = TRUE)
replist_base_comm_discards_steepness_updated_dir <- r4ss::SS_output(dir = base_comm_discards_steepness_updated_dir)
r4ss::SS_plots(replist_base_comm_discards_steepness_updated_dir)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
#remotes::install_github("r4ss/r4ss")
library(r4ss)
library(readr)
library(nwfscSurvey)
library(here)
#remotes::install_github("pfmc-assessments/pacfintools")
library(pacfintools)
exe_loc <- here::here('model/ss3.exe')
#compare updataed ss3 exe, updated historical catch, and updated historical catch + extended catch
models <- c(paste0(file.path(getwd(), "model", "updated_alldata_tunecomps_fitbias_ctl_tunecomps_start_20250512")),
paste0(file.path(getwd(), "model", "base_comm_discards_updated")),
paste0(file.path(getwd(), "model", "base_comm_discards_steepness_updated")))
models
models_output <- SSgetoutput(dirvec = models)
models_summary <- SSsummarize(models_output)
SSplotComparisons(models_summary,
plotdir = file.path(getwd(), "Rcode", "SSplotComparisons_output", "model_bridging_data_comparisons",
"23_base_comm_discards_steepness_updated"),
legendlabels = c("2025 base model (- forcast file changes)",
"+ comm discards updated",
"+ steepness updated to 0.72"),
print = TRUE)
rm(list=ls())
library(dplyr)
library(ggplot2)
#remotes::install_github("r4ss/r4ss")
library(r4ss)
#remotes::install_github("r4ss/r4ss")
library(r4ss)
library(readr)
library(nwfscSurvey)
library(nwfscSurvey)
library(here)
#remotes::install_github("pfmc-assessments/pacfintools")
library(pacfintools)
exe_loc <- here::here('model/ss3.exe')
# Read in base model
mod <- SS_read(here::here("model", "2025_base_model"))
mod_out <- SS_output(here::here("model", "2025_base_model"))
forecast_catch <- r4ss::SS_ForeCatch(mod_out, yrs = 2025:2036)
copy_SS_inputs(
dir.old = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_updated"),
dir.new = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned"),
create.dir = TRUE,
overwrite = TRUE,
use_ss_new = TRUE,
verbose = TRUE
)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
#remotes::install_github("r4ss/r4ss")
library(r4ss)
library(readr)
library(nwfscSurvey)
library(here)
#remotes::install_github("pfmc-assessments/pacfintools")
library(pacfintools)
#remotes::install_github("pfmc-assessments/PEPtools")
library(PEPtools)
exe_loc <- here::here('model/ss3.exe')
copy_SS_inputs(
dir.old = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_updated"),
dir.new = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned"),
create.dir = TRUE,
overwrite = TRUE,
use_ss_new = TRUE,
verbose = TRUE
)
#inputs <- SS_read(dir = file.path(getwd(), "model", "updated_alldata_tunecomps_20250416"))
get_ss3_exe(dir = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned"))
run(dir = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned"),
show_in_console = TRUE, extras = "-nohess")
replist_tuned <- SS_output(dir = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned"))
##### Tune composition data ##### ----------------------------------------------
base_comm_discards_steepness_fitbias_tuned_dir <- here::here("model", "base_comm_discards_steepness_fitbias_tuned")
r4ss::tune_comps(
replist_tuned, # use replist from previous run
write = TRUE,
niters_tuning = 2,
option = "Francis",
dir = base_comm_discards_steepness_fitbias_tuned_dir,
show_in_console = TRUE,
#extras = "-nohess", #run with hessian so we can run fitbias next
exe = "ss3"
)
replist_base_comm_discards_steepness_fitbias_tuned <- SS_output(dir = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned"))
SS_plots(replist_base_comm_discards_steepness_fitbias_tuned)
#compare updataed ss3 exe, updated historical catch, and updated historical catch + extended catch
models <- c(paste0(file.path(getwd(), "model", "updated_alldata_tunecomps_fitbias_ctl_tunecomps_start_20250512")),
paste0(file.path(getwd(), "model", "base_comm_discards_updated")),
paste0(file.path(getwd(), "model", "base_comm_discards_steepness_updated")),
paste0(file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_updated")),
paste0(file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned")))
models
models_output <- SSgetoutput(dirvec = models)
models_summary <- SSsummarize(models_output)
SSplotComparisons(models_summary,
plotdir = file.path(getwd(), "Rcode", "SSplotComparisons_output", "model_bridging_data_comparisons",
"22_base_comm_discards_steepness_fitbias_tuned"),
legendlabels = c("2025 base model (- forcast file changes)",
"+ comm discards updated",
"+ steepness updated to 0.72",
"+ fit bias adj ramp",
"+ tuned comps"),
print = TRUE)
#############################################################
##################### FORECAST FILE CHANGES #############
##############################################################
copy_SS_inputs(
dir.old = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned"),
dir.new = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned_forecast"),
create.dir = TRUE,
overwrite = TRUE,
use_ss_new = TRUE,
verbose = TRUE
)
mod <- SS_read(here::here("model", "base_comm_discards_steepness_fitbias_tuned_forecast"))
mod$fore$Bmark_years <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
mod$fore$Bmark_relF_Basis <- 2
mod$fore$Fmult <- 1
mod$fore$Fcast_years$st_year <- c(-4,-4,-4)
mod$fore$ControlRuleMethod <- 3
mod$fore$Flimitfraction <- -1
mod$fore$Flimitfraction_m <- PEPtools::get_buffer(2025:2036, sigma = 0.5, pstar = 0.4)
mod$fore$FirstYear_for_caps_and_allocations <- 2027
mod$fore$stddev_of_log_catch_ratio <- 0
mod$fore$Do_West_Coast_gfish_rebuilder_output <- 0
mod$fore$Yinit <- 0
mod$fore$Ydecl <- 0
GMT_catch_biomass <- data.frame(
year = rep(2025:2026, each = 7),
seas = 1,
fleet = rep(1:7, 2),
catch_or_F = c(0.14, 10, 9, 7.76, 8.88, 6.6, 3.22, 0.14, 10, 9, 7.76, 9.58, 6.6, 3.22)
) # Sent by Christian Heath 5/5/25
replist <- SS_output("model/base_comm_discards_steepness_fitbias_tuned")
# which fleets have catch in numbers (catch_units == 2) and are fishery fleets (fleet_type == 1)
replist$FleetNames[replist$catch_units == 2 & replist$fleet_type == 1]
# [1] "7_WA_REC"
# calculate model expectation for mean weight for the WA_REC fleet
# which is based on the combination of parameters for growth and selectivity
WA_REC_meanwt <- replist$timeseries |>
dplyr::filter(Area == 2 & Yr == 2024) |>
dplyr::mutate(meanwt = as.numeric(`dead(B):_7`) / as.numeric(`dead(N):_7`)) |>
dplyr::pull(meanwt) |>
round(3)
WA_REC_meanwt
# [1] 2.105
GMT_catch_input <- GMT_catch_biomass |>
dplyr::mutate(catch_or_F = ifelse(fleet != 7, catch_or_F, round(catch_or_F / WA_REC_meanwt, 3)))
# resulting table has 1.53 (1000s) for fleet 7 vs 3.22 (metric tons) in GMT_catch_biomass
GMT_catch_input
mod$fore$ForeCatch <- GMT_catch_input
# Now write again and run
SS_write(mod, here::here("model", "base_comm_discards_steepness_fitbias_tuned_forecast"), overwrite = TRUE)
get_ss3_exe(dir = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned_forecast"))
run(dir = file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned_forecast"), show_in_console = TRUE)
# store plots in figures folder so that we can pull easily into report
SS_plots(replist = SS_output('model/base_comm_discards_steepness_fitbias_tuned_forecast'),dir = here::here("model","base_comm_discards_steepness_fitbias_tuned_forecast"))
# plot the forecast years
SS_plots(replist = SS_output('model/base_comm_discards_steepness_fitbias_tuned_forecast'),dir = here::here("model","base_comm_discards_steepness_fitbias_tuned_forecast","forecast_plots"), forecastplot = TRUE)
### Final Comparison Plots
models <- c(paste0(file.path(getwd(), "model", "2017_yelloweye_model_updated_ss3_exe")),
paste0(file.path(getwd(), "model", "updated_alldata_tunecomps_20250512")),
paste0(file.path(getwd(), "model", "updated_alldata_tunecomps_fitbias_ctl_tunecomps_20250512")),
paste0(file.path(getwd(), "model", "base_comm_discards_steepness_fitbias_tuned_forecast")))
models_output <- SSgetoutput(dirvec = models)
models_summary <- SSsummarize(models_output)
SSplotComparisons(models_summary,
plotdir = file.path(getwd(), "Rcode", "SSplotComparisons_output", "model_bridging_data_comparisons",
"23_alldata_tunecomps_fitbias_upctl_tuned_upstart_refine_fore"),
legendlabels = c("2017 base model",
"Updated all data and tuned",
"Updated fitbias, ctl file, tuned",
"Proposed 2025 base model"),
print = TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
#remotes::install_github("r4ss/r4ss")
library(r4ss)
library(readr)
library(nwfscSurvey)
library(here)
#remotes::install_github("pfmc-assessments/pacfintools")
library(pacfintools)
exe_loc <- here::here('model/ss3.exe')
# Read in base model
# Read in base model and model output
base_out <- SS_output(here::here("model", "2025_base_model"))
forecast_catch <- r4ss::SS_ForeCatch(base_out, yrs = 2025:2036)
copy_SS_inputs(
dir.old = here::here("model", "2025_base_model"),
dir.new = here::here("model", "2025_low_state"),
create.dir = TRUE,
overwrite = TRUE,
use_ss_new = TRUE,
verbose = TRUE
)
low_state <- SS_read(here::here("model", "2025_low_state"))
# Change M
low_state$ctl$MG_parms["NatM_p_1_Fem_GP_1", ]$INIT <- 0.037
#have to change forecasted catch
low_state$fore$ForeCatch <- forecast_catch
low_state$fore$FirstYear_for_caps_and_allocations <- 2037
# Run and save model
SS_write(low_state, here::here("model", "2025_low_state"), overwrite = TRUE)
get_ss3_exe(dir = here::here("model", "2025_low_state"))
r4ss::run(dir = here::here("model", "2025_low_state"), show_in_console = TRUE)
SS_plots(replist = SS_output(here::here("model", "2025_low_state")),dir = here::here("model","2025_low_state"))
