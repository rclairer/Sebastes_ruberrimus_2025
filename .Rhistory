here::here()
setwd("C:/Github/Sebastes_ruberrimus_2025")
here::here()
here::i_am(".here")
library(here)
library(r4ss)
library(dplyr)
library(purrr)
library(furrr)
library(ggplot2)
# dir<-"C:/Users/daubleal/OneDrive - Oregon/Desktop/Sebastes_ruberrimus_2025"
model_directory <- here::here('model')
base_model_name <- here::here(
'model',
'2025_base_model'
)
exe_loc <- here::here('model/ss3')
base_model <- SS_read(base_model_name, ss_new = TRUE)
base_out <- SS_output(base_model_name)
sensi_dirs <- c(
list.files(
file.path(
model_directory,
'sensitivities',
'index_and_comp_data'
),
full.names = TRUE
),
list.files(
file.path(model_directory, 'sensitivities', 'model_specs'),
full.names = TRUE
)
)
tuning_mods <- grep('weighting', sensi_dirs)
make_detailed_sensitivites <- function(biglist, mods, outdir, grp_name) {
shortlist <- big_sensitivity_output[c('base', mods$dir)] |>
r4ss::SSsummarize()
r4ss::SSplotComparisons(
shortlist,
subplots = c(2, 4, 18),
print = TRUE,
plot = FALSE,
plotdir = outdir,
filenameprefix = grp_name,
legendlabels = c('Base', mods$pretty),
endyrvec = 2024
)
SStableComparisons(
shortlist,
modelnames = c('Base', mods$pretty),
names = c(
"Recr_Virgin",
"R0",
"NatM",
"L_at_Amax",
"VonBert_K",
"SmryBio_unfished",
"SSB_Virg",
"SSB_2025",
"Bratio_2025",
"SPRratio_2024",
"LnQ_base_WCGBTS"
),
likenames = c(
"TOTAL",
"Survey",
"Length_comp",
"Age_comp",
"Discard",
"Mean_body_wt",
"Recruitment",
"priors"
)
) |>
# dplyr::filter(!(Label %in% c('NatM_break_1_Fem_GP_1',
#                              'NatM_break_1_Mal_GP_1', 'NatM_break_2_Mal_GP_1')),
#               Label != 'NatM_uniform_Mal_GP_1' | any(grep('break', Label)),
#               Label != 'SR_BH_steep' | any(grep('break', Label))) |>
# dplyr::mutate(dplyr::across(-Label, ~ sapply(., format, digits = 3, scientific = FALSE) |>
#                               stringr::str_replace('NA', ''))) |>
`names<-`(c('Label', 'Base', mods$pretty)) |>
write.csv(
file.path(outdir, paste0(grp_name, '_table.csv')),
row.names = FALSE,
)
}
modeling <- data.frame(
dir = c(
'model_specs/38_est_M',
'model_specs/39_est_steepness',
'model_specs/41_2017_LW'
# ,
# 'model_specs/42_do_recdev2',
# 'model_specs/43_do_recdev3'
),
pretty = c(
'Estimate Natural Mortality',
'Estimate steepness',
'2017 length-weight relationship'
# ,
# 'do_recdev option 2',
# 'do_recdev option 3'
)
)
indices <- data.frame(
dir = c(
'index_and_comp_data/01_no_CA_dockside',
'index_and_comp_data/02_no_OR_dockside',
'index_and_comp_data/03_no_WA_dockside',
'index_and_comp_data/04_no_CA_CPFV',
'index_and_comp_data/05_no_OR_onboard',
'index_and_comp_data/06_no_AFSC_triennial',
'index_and_comp_data/07_no_NWFSC_trawl',
'index_and_comp_data/08_no_IPHC',
'index_and_comp_data/09_no_indices'
),
pretty = c(
'- CA REC index',
'- OR REC index',
'- WA REC index',
'- CA CPFV index',
'- ORFS index',
'- AFSC triennial index',
'- NWFSC bottom trawl index',
'- IPHC index',
'No indices'
)
)
length_comps_1 <- data.frame(
dir = c(
'index_and_comp_data/10_no_CA_trawl_lengths',
'index_and_comp_data/11_no_CA_nontrawl_lengths',
'index_and_comp_data/12_no_CA_dockside_lengths',
'index_and_comp_data/13_no_ORWA_trawl_lengths',
'index_and_comp_data/14_no_ORWA_non-trawl_lengths',
'index_and_comp_data/15_no_OR_dockside_lengths',
'index_and_comp_data/16_no_WA_dockside_lengths'
#'index_and_comp_data/17_no_CA_CPFV_lengths',
#'index_and_comp_data/18_no_OR_onboard_lengths',
#'index_and_comp_data/19_no_AFSC_TRI_lengths',
#'index_and_comp_data/20_no_NWFSC_lengths',
#'index_and_comp_data/21_no_IPHC_lengths',
#'index_and_comp_data/22_no_length_comps'
),
pretty = c(
'- CA TWL length comps',
'- CA NONTWL lengths comps',
'- CA REC lengths comps',
'- ORWA TWL length comps',
'- ORWA NONTWL length comps',
'- OR REC length comps',
'- WA REC length comps'
#'- CA CPFV length comps',
#'- ORFS length comps',
#'- AFSC triennial length comps',
#'- NWFSC bottom trawl length comps',
#'- IPHC length comps',
#'- No length comps'
)
)
length_comps_2 <- data.frame(
dir = c(
#'index_and_comp_data/10_no_CA_trawl_lengths',
#'index_and_comp_data/11_no_CA_nontrawl_lengths',
#'index_and_comp_data/12_no_CA_dockside_lengths',
#'index_and_comp_data/13_no_ORWA_trawl_lengths',
#'index_and_comp_data/14_no_ORWA_non-trawl_lengths',
#'index_and_comp_data/15_no_OR_dockside_lengths',
#'index_and_comp_data/16_no_WA_dockside_lengths'
'index_and_comp_data/17_no_CA_CPFV_lengths',
'index_and_comp_data/18_no_OR_onboard_lengths',
'index_and_comp_data/19_no_AFSC_TRI_lengths',
'index_and_comp_data/20_no_NWFSC_lengths',
'index_and_comp_data/21_no_IPHC_lengths',
'index_and_comp_data/22_no_length_comps'
),
pretty = c(
#'- CA TWL length comps',
#'- CA NONTWL lengths comps',
#'- CA REC lengths comps',
#'- ORWA TWL length comps',
#'- ORWA NONTWL length comps',
#'- OR REC length comps',
#'- WA REC length comps',
'- CA CPFV length comps',
'- ORFS length comps',
'- AFSC triennial length comps',
'- NWFSC bottom trawl length comps',
'- IPHC length comps',
'- No length comps'
)
)
age_comps_1 <- data.frame(
dir = c(
'index_and_comp_data/23_no_CA_NONTWL_ages',
'index_and_comp_data/24_no_CA_REC_ages',
'index_and_comp_data/25_no_ORWA_TWL_ages',
'index_and_comp_data/26_no_ORWA_NON-TWL_ages',
'index_and_comp_data/27_no_OR_dockside_ages',
'index_and_comp_data/28_no_WA_dockside_ages'
#'index_and_comp_data/29_no_NWFSC_ages',
#'index_and_comp_data/30_no_IPHC_ages',
#'index_and_comp_data/31_no_age_comps',
#'model_specs/54_M_I_weighting'
),
pretty = c(
'- CA NONTWL age comps',
'- CA REC age comps',
'- ORWA TWL age comps',
'- ORWA NONTWL age comps',
'- OR REC age comps',
'- WA REC age comps'
#'- NWFSC bottom trawl age comps',
#'- IPHC age comps',
#'- No age comps',
#'McAllister & Ianelli weighting'
)
)
age_comps_2 <- data.frame(
dir = c(
#'index_and_comp_data/23_no_CA_NONTWL_ages',
#'index_and_comp_data/24_no_CA_REC_ages',
#'index_and_comp_data/25_no_ORWA_TWL_ages',
#'index_and_comp_data/26_no_ORWA_NON-TWL_ages',
#'index_and_comp_data/27_no_OR_dockside_ages',
#'index_and_comp_data/28_no_WA_dockside_ages',
'index_and_comp_data/29_no_NWFSC_ages',
'index_and_comp_data/30_no_IPHC_ages',
'index_and_comp_data/31_no_age_comps',
'model_specs/54_M_I_weighting'
),
pretty = c(
#'- CA NONTWL age comps',
#'- CA REC age comps',
#'- ORWA TWL age comps',
#'- ORWA NONTWL age comps',
#'- OR REC age comps',
#'- WA REC age comps',
'- NWFSC bottom trawl age comps',
'- IPHC age comps',
'- No age comps',
'McAllister & Ianelli weighting'
)
)
sens_names <- bind_rows(modeling, indices,
length_comps_1, length_comps_2,
age_comps_1,age_comps_2)
big_sensitivity_output <- SSgetoutput(
dirvec = file.path(
model_directory,
c(
"2025_base_model",
glue::glue("sensitivities/{subdir}", subdir = sens_names$dir)
)
)
) |>
`names<-`(c('base', sens_names$dir))
big_sensitivity_output$base = base_out
# test to make sure they all read correctly:
which(sapply(big_sensitivity_output, length) < 180) # all lengths should be >180
sens_names_ls <- list(
modeling = modeling,
indices = indices,
length_comps_1 = length_comps_1,
length_comps_2 = length_comps_2,
age_comps_1 = age_comps_1,
age_comps_2 = age_comps_2
)
outdir <- 'report/figures/sensitivities'
purrr::imap(
sens_names_ls,
\(sens_df, grp_name)
make_detailed_sensitivites(
biglist = big_sensitivity_output,
mods = sens_df,
outdir = outdir,
grp_name = grp_name
)
)
projections_table
read_csv(here::here("report", "tables", "ofl_abc_acl_table.csv")
)
#| warning: false
#| echo: false
#| message: false
library(flextable)
#| warning: false
#| echo: false
#| message: false
library(flextable)
library(gt)
library(r4ss)
library(gt)
library(r4ss)
library(here)
library(tidyverse)
library(dplyr)
read_csv(here::here("report", "tables", "ofl_abc_acl_table.csv"))
replist <- r4ss::SS_output(here::here("model", "2025_base_model"), verbose = FALSE, printstats = FALSE)
inputs <- r4ss::SS_read(here::here("model", "2025_base_model"))
tables <-r4ss::table_all(replist, dir = here::here("report"))
if (file.exists(here::here("report/tables"))) {
all_files <- list.files(here::here("report/tables"), full.names = TRUE)
all_rda_files <- all_files[grep(".rda", all_files)]
for (a in 1:length(all_rda_files)) {
load(all_rda_files[a])
}
# process all executive summary tables
catches_es_table <- catches_es$table
catches_es_cap <- catches_es$cap
rm(catches_es)
ssb_es_table <- ssb_es$table |> rename(`Lower Interval.` = `Lower Interval (mt)`) |> rename(`Upper Interval.` = `Upper Interval (mt)`)
ssb_es_cap <- ssb_es$cap
ssb_es_cap <- gsub("fraction unfished", "fraction of unfished spawning output", ssb_es_cap)
ssb_es_cap <- "Estimated recent trend in spawning output (billions of eggs) and the fraction of unfished spawning output and the 95 percent confidence intervals."
rm(ssb_es)
spr_es_table <- spr_es$table
spr_es_cap <- spr_es$cap
rm(spr_es)
recr_es_table <- recr_es$table
recr_es_cap <- recr_es$cap
rm(recr_es)
reference_points_table <- reference_points$table
reference_points_cap <- reference_points$cap
rm(reference_points)
recent_management_table <- recent_management$table
recent_management_cap <- recent_management$cap
rm(recent_management)
projections_table <- projections$table
projections_cap <- projections$cap
projections_cap <- gsub("fraction unfished", "fraction of unfished spawning output", projections_cap)
rm(projections)
compweight_table <- table_compweight$table
compweight_cap <- table_compweight$cap
rm(table_compweight)
config_table <- table_config$table
config_cap <- table_config$cap
rm(table_config)
parcount_table <- table_parcounts$table
parcount_cap <- table_parcounts$cap
rm(table_parcounts)
pars_table <- table_pars$table
pars_cap <- table_pars$cap
rm(table_pars)
# table from r4ss::table_exec_summary()
time_series_table <- time_series$table
time_series_cap <- time_series$cap
rm(time_series)
time_series_table <- time_series_table |>
dplyr::mutate(dplyr::across(dplyr::everything(), ~ dplyr::case_when(
grepl("Spawning", dplyr::cur_column()) ~ round(.x, 2),
grepl("Total", dplyr::cur_column()) ~ round(.x, 0),
grepl("Fraction", dplyr::cur_column()) ~ round(.x, 3),
grepl("Recruits", dplyr::cur_column()) ~ round(.x, 0),
grepl("Mortality", dplyr::cur_column()) ~ round(.x, 0),
TRUE ~ round(.x, 3)
)))
# table from r4ss::table_ts() (not used currently)
ts_table <- table_ts$table
ts_cap <- table_ts$cap
rm(table_ts)
eval_tables <- TRUE
} else {
eval_tables <- FALSE
}
projections_table[1:2, "Adopted OFL (mt)"] <- read_csv(here::here("report", "tables", "ofl_abc_acl_table.csv")) |>
dplyr::select('OFL (mt)')|>
dplyr::filter(Year %in% projections_table$Year) |>
dplyr::arrange(YEAR)
test <- read_csv(here::here("report", "tables", "ofl_abc_acl_table.csv"))
View(test)
projections_table[1:2, "Adopted OFL (mt)"] <- read_csv(here::here("report", "tables", "ofl_abc_acl_table.csv")) |>
dplyr::select('OFL (mt)')
View(projections_table)
projections_table[1:2, "Adopted ACL (mt)"] <- read_csv(here::here("report", "tables", "ofl_abc_acl_table.csv")) |>
dplyr::select('ACL (mt)')
tables <-r4ss::table_all(replist, dir = here::here("report"))
if (file.exists(here::here("report/tables"))) {
all_files <- list.files(here::here("report/tables"), full.names = TRUE)
all_rda_files <- all_files[grep(".rda", all_files)]
for (a in 1:length(all_rda_files)) {
load(all_rda_files[a])
}
# process all executive summary tables
catches_es_table <- catches_es$table
catches_es_cap <- catches_es$cap
rm(catches_es)
ssb_es_table <- ssb_es$table |> rename(`Lower Interval.` = `Lower Interval (mt)`) |> rename(`Upper Interval.` = `Upper Interval (mt)`)
ssb_es_cap <- ssb_es$cap
ssb_es_cap <- gsub("fraction unfished", "fraction of unfished spawning output", ssb_es_cap)
ssb_es_cap <- "Estimated recent trend in spawning output (billions of eggs) and the fraction of unfished spawning output and the 95 percent confidence intervals."
rm(ssb_es)
spr_es_table <- spr_es$table
spr_es_cap <- spr_es$cap
rm(spr_es)
recr_es_table <- recr_es$table
recr_es_cap <- recr_es$cap
rm(recr_es)
reference_points_table <- reference_points$table
reference_points_cap <- reference_points$cap
rm(reference_points)
recent_management_table <- recent_management$table
recent_management_cap <- recent_management$cap
rm(recent_management)
projections_table <- projections$table
projections_cap <- projections$cap
projections_cap <- gsub("fraction unfished", "fraction of unfished spawning output", projections_cap)
rm(projections)
compweight_table <- table_compweight$table
compweight_cap <- table_compweight$cap
rm(table_compweight)
config_table <- table_config$table
config_cap <- table_config$cap
rm(table_config)
parcount_table <- table_parcounts$table
parcount_cap <- table_parcounts$cap
rm(table_parcounts)
pars_table <- table_pars$table
pars_cap <- table_pars$cap
rm(table_pars)
# table from r4ss::table_exec_summary()
time_series_table <- time_series$table
time_series_cap <- time_series$cap
rm(time_series)
time_series_table <- time_series_table |>
dplyr::mutate(dplyr::across(dplyr::everything(), ~ dplyr::case_when(
grepl("Spawning", dplyr::cur_column()) ~ round(.x, 2),
grepl("Total", dplyr::cur_column()) ~ round(.x, 0),
grepl("Fraction", dplyr::cur_column()) ~ round(.x, 3),
grepl("Recruits", dplyr::cur_column()) ~ round(.x, 0),
grepl("Mortality", dplyr::cur_column()) ~ round(.x, 0),
TRUE ~ round(.x, 3)
)))
# table from r4ss::table_ts() (not used currently)
ts_table <- table_ts$table
ts_cap <- table_ts$cap
rm(table_ts)
eval_tables <- TRUE
} else {
eval_tables <- FALSE
}
projections_table
