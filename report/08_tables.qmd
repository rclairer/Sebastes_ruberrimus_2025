## Tables 
 
```{r} 
#| label: 'set-rda-dir-tbls'
#| echo: false 
#| warning: false 
#| eval: false 
#| include: false
library(flextable)
library(gt)
library(tidyverse)
library(dplyr)
library(r4ss)
# You can save tables to read in as csv or rda files.
# stockplotr generally uses rda files.
# I (Kiva) prefer csv files because they are text files that are easier to track and preview with version control.

# There are many ways to incorporate tables into quarto documents.
# One is using the flextable package via R chunks.
# For help: https://ardata-fr.github.io/flextable-book/

``` 

### Data

<!-- Fishery Dependent Data -->
```{r}
#| label: tbl-all_removals
#| echo: false
#| warning: false
#| tbl-cap: "Time series of yelloweye rockfish catches by fleet used in the assessment. Trawl fleets include yelloweye bycatch in foreign POP and in at-sea Pacific hake fisheries."

inputs <- SS_read(here::here("model", "2025_base_model", "updated_alldata_tunecomps_fitbias_ctl_tunecomps_start_20250427"))

WA_weights_new <- read.csv(here::here("Data", "raw", "nonconfidential", "CTE001-Washington-1990---2024.csv")) |>
  group_by(RECFIN_YEAR) |>
  summarise(
    WA.sport..mt. = sum(SUM_TOTAL_MORTALITY_MT, na.rm = TRUE),
  ) |>
  ungroup() |>
  filter(RECFIN_YEAR > 2016) |>
  rename(Year = RECFIN_YEAR)
  
WA_weights_all <- read.csv(here::here("report", "tables", "old_catch_table.csv")) |>
  select(Year, WA.sport..mt.) |>
  bind_rows(WA_weights_new) |>
  mutate(WA.sport..mt. = round(WA.sport..mt., 3)) |>
  rename(year = Year,
         `7` = `WA.sport..mt.`)

inputs$dat$catch |>
  dplyr::select(year, fleet, catch) |>
  tidyr::pivot_wider(names_from = fleet, values_from = catch) |>
  dplyr::filter(year > 1) |>
  rename(`8` = `7`) |>
  dplyr::inner_join(WA_weights_all) |>
  select(year, `1`:`6`, `7`, `8`) |>
  mutate(Total = round(rowSums(across(`1`:`7`)), 3)) |>
  gt() |>
 cols_label(
    year = "Year",
    `1` = "CA trawl (mt)",
    `2` = "CA non-trawl (mt)",
    `3` = "CA sport (mt)",
    `4` = "OR-WA trawl (mt)",
    `5` = "OR-WA non-trawl (mt)",
    `6` = "OR sport (mt)",
    `7` = "WA sport (mt)",
    `8` = "WA sport (1000s fish)",
    Total = "Total Catch (mt)"
  ) |> 
  tab_options(
    table.font.size = 12,
    latex.use_longtable = TRUE
  ) |>
  as_latex()
```


```{r}
#| label: tbl-srvy-lat-depth
#| echo: false
#| warning: false
#| tbl-cap: "Latitudinal and depth ranges by year of two bottom trawl surveys used in the assessment"
```


```{r}
#| label: tbl-sampling-effort-triennial
#| echo: false
#| warning: false
#| tbl-cap: "Summary of sampling effort within triennial survey, with total and yelloweye positive hauls summarized by area."
sampling_tri <- data.frame(
  year = c(1980, 1983, 1986, 1989, 1992, 1995, 1998, 2001, 2004, 1980, 1983, 1986, 1989, 1992, 1995, 1998, 2001, 2004),
  state = c("CA", "CA", "CA", "CA", "CA", "CA", "CA", "CA", "CA", "OR-WA", "OR-WA", "OR-WA", "OR-WA", "OR-WA", "OR-WA", "OR-WA", "OR-WA", "OR-WA"),
  number.hauls = c(68, 96, 95, 147, 135, 123, 129, 129, 103, 263, 416, 389, 300, 310, 241, 260, 246, 185),
  number.positive = c(1, 1, 2, 7, 2, 1, 0, 0, 3, 13, 26, 27, 30, 25, 7, 14, 15, 9)
)

cols_order <- unlist(lapply(c("CA", "OR-WA"), function(x) paste(x, c("number.hauls", "number.positive"), sep = "_")))

data_wide <- sampling_tri |>
  pivot_wider(names_from = "state", values_from = c(number.hauls, number.positive), names_glue = "{state}_{.value}") |>
  select(all_of(c("year", cols_order)))

data_wide |> 
  gt(sampling_tri, rowname_col = "year") |>
  tab_spanner_delim(
    delim = "_",
    split = "first"
  ) |>
  cols_label_with(
    fn = function(x) gsub("number.hauls", "Number of hauls", x)
  ) |>
  cols_label_with(
    fn = function(x) gsub("number.positive", "Number of positive hauls", x)
  ) |>
  tab_options(
    table.font.size = 12,
    latex.use_longtable = TRUE
  ) |>
  as_latex()
```

```{r}
#| label: tbl-sampling-effort-nwfsc
#| echo: false
#| warning: false
#| tbl-cap: "Summary of sampling effort within NWFSC trawl survey, with total and yelloweye positive hauls summarized by area."
```

```{r}
#| label: tbl-sampling-effort-nwfsc
#| echo: false
#| warning: false
#| tbl-cap: "Filtering levels and resultant data from the IPHC halibut survey index."
```

```{r}
#| label: tbl-filtering-iphc
#| echo: false
#| warning: false
#| tbl-cap: "Filtering levels and resultant data from the IPHC halibut survey index."
```

```{r}
#| label: tbl-iphc-model-selection
#| echo: false
#| warning: false
#| tbl-cap: "sdmTMB model selection for the IPHC halibut survey index. Gray bar indicates selected model."
```

```{r}
#| label: tbl-ts-indices
#| echo: false
#| warning: false
#| tbl-cap: "Time series of relative abundance indices and uncertainty (CVs) for the Washington-Oregon fishery independent surveys."
```

```{r}
#| label: tbl-sampling-effort-length-CA
#| echo: false
#| warning: false
#| tbl-cap: "Summary of fishery sampling effort (number of trips and fish sampled) used to create length frequency distributions of the California fleets."
```

```{r}
#| label: tbl-sampling-effort-length-ORWA
#| echo: false
#| warning: false
#| tbl-cap: "Summary of fishery sampling effort (number of trips and fish sampled) used to create length frequency distributions of the Oregon and Washington fleets."
```

```{r}
#| label: tbl-sampling-effort-age-CA
#| echo: false
#| warning: false
#| tbl-cap: "Summary of fishery sampling effort (number of trips and fish sampled) used to create age frequency distributions of the California fleets."
```

```{r}
#| label: tbl-sampling-effort-age-ORWA
#| echo: false
#| warning: false
#| tbl-cap: "Summary of fishery sampling effort (number of trips and fish sampled) used to create age frequency distributions of the Oregon and Washington fleets."
```

```{r}
#| label: tbl-sampling-effort-length-wcgop
#| echo: false
#| warning: false
#| tbl-cap: "Summary of WCGOP sampling effort (number of trips and fish sampled) of yelloweye rockfish lengths within the commercial fleets."
```

```{r}
#| label: tbl-sampling-effort-age-wcgop
#| echo: false
#| warning: false
#| tbl-cap: "Summary of WCGOP sampling effort (number of trips and fish sampled) of yelloweye rockfish ages within the commercial fleets."
```

```{r}
#| label: tbl-sampling-effort-length-fish-ind
#| echo: false
#| warning: false
#| tbl-cap: "Summary of sampling effort (number of hauls and fish sampled) used to create length frequency distributions of the fishery-independent surveys."
```

```{r}
#| label: tbl-sampling-effort-age-fish-ind
#| echo: false
#| warning: false
#| tbl-cap: "Summary of sampling effort (number of hauls and fish sampled) used to create age frequency distributions of the fishery-independent surveys."
```

```{r}
#| label: tbl-age-error
#| echo: false
#| warning: false
#| tbl-cap: "Ageing error models and resultant model selection (AICc) values for 9 models of bias and precision explored for each lab used in the yelloweye rockfish assessments. Gray bars indicate the chosen model. Model codes: 0= unbiased; 1 = Constant CV; 2 = Curvilinear SD; 3= Curvilinear CV."
```



### Model results
 
```{r}
#| label: tbl-model-config
#| warning: false
#| echo: false
#| tbl-cap: !expr if(eval_tables) config_cap

config_table |>
  gt() |>
  tab_options(
    table.font.size = 12,
    latex.use_longtable = TRUE
  ) |>
  as_latex()
```

```{r}
#| label: tbl-n-param
#| warning: false
#| echo: false
#| tbl-cap: !expr if(eval_tables) parcount_cap

parcount_table |>
  dplyr::filter(Count > 0) |>
  gt() |>
  tab_options(
    table.font.size = 12,
    latex.use_longtable = TRUE
  ) |>
  as_latex()
```

::: {.landscape}

```{r}
#| label: tbl-pars
#| warning: false
#| echo: false
#| tbl-cap: !expr if(eval_tables) pars_cap

pars_table |>
  mutate(SD = ifelse(Status == 'fixed', NA, SD)) |>
  gt() |>
  sub_missing(missing_text = '') |>
  tab_options(
    table.font.size = 12,
    latex.use_longtable = TRUE
  ) |>
  as_latex()
```
:::

```{r}
#| label: tbl-compweight
#| warning: false
#| echo: false
#| tbl-cap: !expr if(eval_tables) compweight_cap

compweight_table |>
  gt() |>
  tab_options(
    table.font.size = 12,
    latex.use_longtable = TRUE
  ) |>
  as_latex()
```


```{r, results = "asis"}
#| label: tbl-ts
#| warning: false
#| echo: false
#| eval: !expr eval_tables 
#| tbl-cap: !expr if(eval_tables) time_series_cap 
#| tbl-pos: H

time_series_table |>
kableExtra::kable(
  format = "latex", 
  longtable = TRUE,
  booktabs = TRUE,
  caption = "Time series of population estimates from the base model.",
  linesep = "") |>
  kableExtra::kable_styling(
    latex_options = "repeat_header",
    font_size = 8) |>
  kableExtra::column_spec(
    column = 1:9,
    width = "0.5in"
  )
```


```{r}
#| label: tbl-sensitivities-like-comps
#| echo: false
#| warning: false
#| tbl-cap: "Base model sensitivity to the removal of data sources."
source(here::here("Rcode/table_sens.R"))
indices <- read.csv(here::here("report", "plots_for_report", "sensitivities", "indices_table.csv"))
comps <- read.csv(here::here("report", "plots_for_report", "sensitivities", "comp_data_table.csv"))

indices_and_comps <- inner_join(indices, comps, by = c("Label", "Base"))
names(indices_and_comps) <- gsub("X..", "", names(indices_and_comps))

table_sens(indices_and_comps)

# There is still an error here because of the latex option in the kableExtra conditional color call
```


```{r}
#| label: tbl-sensitivities-model-specs
#| echo: false
#| warning: false
#| tbl-cap: "Base model sensitivity to model parameters and specifications."
modeling <- read.csv(here::here("report", "plots_for_report", "sensitivities", "modeling_table.csv"))
table_sens(indices_and_comps)
# There is still an error here because of the latex option in the kableExtra conditional color call
```


```{r, tbl-ref-points-es, results = "asis"}
#| label: tbl-ref-points-es
#| warning: false
#| echo: false
#| eval: !expr eval_tables 
#| tbl-cap: !expr if(eval_tables) reference_points_cap 
#| tbl-pos: H

reference_points_table |>
  gt::gt() |>
  gt::fmt_number(
    columns = 2:4,
    rows = c(2:4, 7, 10, 12, 15, 17, 20),
    decimals = 0
  ) |>
  gt::fmt_number(
    columns = 2:4,
    rows = 1,
    decimals = 1
  ) |>
  gt::fmt_number(
    columns = 2:4,
    rows = c(5, 8, 9, 13:14, 18:19),
    decimals = 3
  ) |>
  gt::tab_options(
    table.font.size = 12,
    latex.use_longtable = TRUE 
  ) |>  
  gt::tab_style(
    style = list(
      gt::cell_text(style = "italic")
    ),
    locations = gt::cells_body(
      columns = "Reference Point",
      rows = dplyr::starts_with("Reference")
    )
  ) |>
  gt::sub_missing(
    columns = tidyselect::everything(),
    missing_text = "---"
  ) |>
  gt::as_latex()

```

### Management

\pagebreak

::: {.landscape}

```{r, results = "asis"}
#| label: tbl-projections
#| warning: false
#| echo: false
#| eval: !expr eval_tables 
#| tbl-cap: !expr if(eval_tables) projections_cap 
#| tbl-pos: H

projections_table |>
  gt::gt() |>
  gt::fmt_number(
    columns = c(2:5, 7:9),
    decimals = 0
  ) |>
  gt::fmt_number(
    columns = c(6, 10),
    decimals = 3
  ) |>
  gt::tab_options(
    table.font.size = 12,
    latex.use_longtable = TRUE 
  ) |>
  gt::sub_missing(
    columns = tidyselect::everything(),
    missing_text = "---"
  ) |>
  gt::cols_align(
    align = "center"
  ) |>
  gt::cols_width(
    tidyselect::everything() ~ px(75)
  ) |>
  gt::as_latex()

```

:::

\pagebreak